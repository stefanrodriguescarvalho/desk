// ANIMATION BUILDER
$video_frames: ( // ID of the scene
the_scene: ( // Amount of frames
amount: 88, // Aspect ratio
aspect_ratio: 2, // Animation duration
duration: 3s, // Animation direction (normal, alternate, reverse, eetc)
direction: normal, // URL start mask
url_start: "https://olivier3lanc.github.io/cinematics-resources/wormhole_c/wormhole_c_", // URL end mask
url_end: ".webp"));
body {
    background-color: black;
}

// COMMON PROPERTIES FOR ANIMATION
.scene {
    position: fixed;
    display: flex;
    min-height: 100%;
    min-width: 100%;
    overflow: hidden;
    top: 50%;
    left: 50%;
    background-color: black;
    transform: translateX(-50%) translateY(-50%);
    // ANIMATION CONTAINER
    &::after {
        content: "";
        position: fixed;
        top: 50%;
        left: 50%;
        transform: translateX(-50%) translateY(-50%);
        width: 111.5%;
        height: 111.5%;
        transition: none;
        animation-timing-function: step-start;
        animation-iteration-count: infinite;
        background-size: 90%;
        background-repeat: no-repeat;
    }
}

// TITLE
@keyframes specialLetter {
    100% {
        transform: rotateY(180deg);
    }
}

#special-letter {
    perspective: 1em;
    &>span {
        animation: specialLetter 3s 3s infinite alternate;
    }
}

// COMMANDS
#cmd-play {
    &:checked {
        ~figure {
            &::after {
                animation-play-state: running;
            }
        }
        ~nav {
            [for="cmd-play"] {
                color: var(--cin-color-primary);
            }
        }
    }
}

#cmd-pause {
    &:checked {
        ~figure {
            &::after {
                animation-play-state: paused;
            }
        }
        ~nav {
            [for="cmd-pause"] {
                color: var(--cin-color-primary);
            }
        }
    }
}

#cmd-normal {
    &:checked {
        ~figure {
            &::after {
                animation-direction: normal;
            }
        }
        ~nav {
            [for="cmd-normal"] {
                color: var(--cin-color-primary);
            }
        }
    }
}

#cmd-reverse {
    &:checked {
        ~figure {
            &::after {
                animation-direction: reverse;
            }
        }
        ~nav {
            [for="cmd-reverse"] {
                color: var(--cin-color-primary);
            }
        }
    }
}

#cmd-alternate {
    &:checked {
        ~figure {
            &::after {
                animation-direction: alternate;
            }
        }
        ~nav {
            [for="cmd-alternate"] {
                color: var(--cin-color-primary);
            }
        }
    }
}

#cmd-alternate-reverse {
    &:checked {
        ~figure {
            &::after {
                animation-direction: alternate-reverse;
            }
        }
        ~nav {
            [for="cmd-alternate-reverse"] {
                color: var(--cin-color-primary);
            }
        }
    }
}

// Function that set up multiple background-image property
@function backgroundImage($url_start, $url_end, $total) {
    $bg_image_value: "";
    @for $i from 1 through $total {
        $separator: ", ";
        @if $i==1 {
            $separator: "";
        }
        $bg_image_value: $bg_image_value+$separator+url($url_start + $i + $url_end);
    }
    @return unquote($bg_image_value);
}

// Function that set up multiple background-position property
@function backgroundPosition($iteration, $total) {
    $current_frame_value: "";
    $bg_size_value: $current_frame_value;
    @for $i from 1 through $total {
        @if $i==$iteration {
            $current_frame_value: 50%;
        }
        @else {
            $current_frame_value: -1000%;
        }
        $separator: ",";
        @if $i==1 {
            $separator: "";
        }
        $bg_size_value: $bg_size_value+$separator+$current_frame_value;
    }
    @return unquote($bg_size_value);
}

// CSS DECLARATION OF EACH ANIMATION
@each $anim_id,
$anim_data in $video_frames {
    $amount_of_frames: map-get($anim_data, amount);
    // CREATE KEYFRAMES
    @keyframes #{$anim_id} {
        @for $i from 1 through $amount_of_frames {
            #{$i*100/$amount_of_frames + unquote('%')} {
                background-position: backgroundPosition($i, $amount_of_frames);
            }
        }
    }
    // CREATE ANIMATION
    ##{$anim_id} {
        // PLAYER CONTAINER
        aspect-ratio: map-get($anim_data, aspect_ratio);
        // ANIMATION CONTAINER
        &::after {
            content: "";
            animation-name: $anim_id;
            animation-duration: map-get($anim_data, duration);
            animation-direction: map-get($anim_data, direction);
            background-image: backgroundImage( map-get($anim_data, url_start), map-get($anim_data, url_end), map-get($anim_data, amount));
        }
    }
}